<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:jdbc="http://www.mulesoft.org/schema/mule/jdbc"
      xmlns:xm="http://www.mulesoft.org/schema/mule/xml"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
       http://www.mulesoft.org/schema/mule/jdbc http://www.mulesoft.org/schema/mule/jdbc/3.2/mule-jdbc.xsd
       http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/3.2/mule-xml.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.2/mule-vm.xsd"
        >
    <global-property name="jms.url" value="vm://localhost"/>
    <global-property name="jdbc.username" value="miatest"/>
    <global-property name="jdbc.password" value=""/>
    <global-property name="jdbc.url" value="jdbc:mysql://localhost/monitoring"/>
    <global-property name="jdbc.driver" value="com.mysql.jdbc.Driver"/>

	<spring:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <spring:property name="driverClassName" value="${jdbc.driver}"/>
        <spring:property name="url" value="${jdbc.url}"/>
        <spring:property name="username" value="${jdbc.username}"/>
        <spring:property name="password" value="${jdbc.password}"/>
    </spring:bean>

    <jdbc:connector name="jdbcConnector" dataSource-ref="dataSource">    
         <jdbc:query key="alertQuery"
                     value="select * from alerts where timestamp &gt; {fn TIMESTAMPADD( SQL_TSI_HOUR, -1, CURRENT_TIMESTAMP)}"/>

    </jdbc:connector>
        
    <vm:connector name="vmConnector" />

    <model name="jdbcInboundModel">
        <service name="jdbcInboundService">
            <inbound>
                <jdbc:inbound-endpoint pollingFrequency="300000" queryKey="alertQuery"/>
            </inbound>
            <outbound>
                <pass-through-router>
                    <vm:outbound-endpoint address="vm://orders" exchange-pattern="one-way"/>
                </pass-through-router>
            </outbound>
        </service>
    </model>
</mule>
